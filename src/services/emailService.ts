import emailjs from '@emailjs/browser';
import { CartItem } from '@/context/CartContext';

// EmailJS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const EMAILJS_CONFIG = {
  serviceId: 'service_osw4pc5',
  templateId: 'template_a6ZxzTOr5qpPTybr_2Ji', 
  publicKey: 'UsA8zjcYvrlcSqY1b'
};

interface OrderData {
  company: string;
  contact: string;
  phone: string;
  email: string;
  address: string;
  cart: CartItem[];
  total: number;
}

export const sendOrderEmail = async (orderData: OrderData): Promise<boolean> => {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É EmailJS');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EmailJS
    emailjs.init(EMAILJS_CONFIG.publicKey);

    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const templateParams = {
      to_name: '–ü–æ–ª—É—á–∞—Ç–µ–ª—å',
      to_email: 'sadoxa1996@mail.ru',
      from_name: orderData.company,
      message: `–ù–û–í–´–ô –ó–ê–ö–ê–ó

–î–ê–ù–ù–´–ï –ü–†–ï–î–ü–†–ò–Ø–¢–ò–Ø:
‚Ä¢ –ö–æ–º–ø–∞–Ω–∏—è: ${orderData.company}
‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ: ${orderData.contact}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${orderData.phone}
‚Ä¢ Email: ${orderData.email}
‚Ä¢ –ê–¥—Ä–µ—Å: ${orderData.address}

–¢–û–í–ê–†–´ –í –ö–û–†–ó–ò–ù–ï:
${orderData.cart.map(item => 
  `‚Ä¢ ${item.name} - ${item.quantity} —à—Ç. √ó ${item.price.toLocaleString()} ‚ÇΩ = ${(item.price * item.quantity).toLocaleString()} ‚ÇΩ`
).join('\n')}

–ò–¢–û–ì–û: ${orderData.total.toLocaleString()} ‚ÇΩ

–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: ${new Date().toLocaleDateString('ru-RU')}`
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    const response = await emailjs.send(
      EMAILJS_CONFIG.serviceId,
      EMAILJS_CONFIG.templateId,
      templateParams
    );

    console.log('‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:', response);
    return true;

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
    return false;
  }
};