import emailjs from '@emailjs/browser';
import { CartItem } from '@/context/CartContext';

// EmailJS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è - –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è
const EMAILJS_CONFIG = {
  serviceId: 'service_osw4pc5',
  templateId: 'template_a6zxztor5qptybr_2ji', // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Ñ–æ—Ä–º–∞—Ç –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
  publicKey: 'UsA8zjcYvrlcSqY1b'
};

interface OrderData {
  company: string;
  contact: string;
  phone: string;
  email: string;
  address: string;
  cart: CartItem[];
  total: number;
}

export const sendOrderEmail = async (orderData: OrderData): Promise<boolean> => {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É EmailJS');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EmailJS
    emailjs.init(EMAILJS_CONFIG.publicKey);

    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    const templateParams = {
      user_name: orderData.company,
      user_email: orderData.email,
      message: `–ù–û–í–´–ô –ó–ê–ö–ê–ó

–î–ê–ù–ù–´–ï –ü–†–ï–î–ü–†–ò–Ø–¢–ò–Ø:
‚Ä¢ –ö–æ–º–ø–∞–Ω–∏—è: ${orderData.company}
‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ: ${orderData.contact}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${orderData.phone}
‚Ä¢ Email: ${orderData.email}
‚Ä¢ –ê–¥—Ä–µ—Å: ${orderData.address}

–¢–û–í–ê–†–´ –í –ö–û–†–ó–ò–ù–ï:
${orderData.cart.map(item => 
  `‚Ä¢ ${item.name} - ${item.quantity} —à—Ç. √ó ${item.price.toLocaleString()} ‚ÇΩ = ${(item.price * item.quantity).toLocaleString()} ‚ÇΩ`
).join('\n')}

–ò–¢–û–ì–û: ${orderData.total.toLocaleString()} ‚ÇΩ

–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: ${new Date().toLocaleDateString('ru-RU')}`
    };

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
    const response = await emailjs.send(
      EMAILJS_CONFIG.serviceId,
      EMAILJS_CONFIG.templateId,
      templateParams
    );

    console.log('‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:', response);
    return true;

  } catch (error) {
    console.error('‚ùå –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
    console.error('‚ùå –¢–∏–ø –æ—à–∏–±–∫–∏:', typeof error);
    console.error('‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏:', error instanceof Error ? error.message : String(error));
    console.error('‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:', EMAILJS_CONFIG);
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏
    try {
      console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É...');
      
      const altResponse = await fetch('https://api.emailjs.com/api/v1.0/email/send', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          service_id: EMAILJS_CONFIG.serviceId,
          template_id: EMAILJS_CONFIG.templateId,
          user_id: EMAILJS_CONFIG.publicKey,
          template_params: {
            user_name: orderData.company,
            user_email: orderData.email,
            message: `–ó–∞–∫–∞–∑ –æ—Ç ${orderData.company}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${orderData.phone}\n–¢–æ–≤–∞—Ä—ã: ${orderData.cart.length} —à—Ç.\n–°—É–º–º–∞: ${orderData.total} ‚ÇΩ`
          }
        })
      });
      
      if (altResponse.ok) {
        console.log('‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞!');
        return true;
      } else {
        console.error('‚ùå –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞:', await altResponse.text());
      }
    } catch (altError) {
      console.error('‚ùå –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å:', altError);
    }
    
    return false;
  }
};